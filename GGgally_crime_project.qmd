---
title: "GGgallyy_Indiacrime_projectt"
---

# Install Packages

```{r}
pacman::p_load(sf, tmap, kableExtra, tidyverse, sfdep, readxl, plyr, Kendall, plotly, dplyr,stringdist)
```

# Aspatial Data

## Importing the Data

### IPC Data

```{r}
IPC <- read_xlsx("data/aspatial/1 Districtwise IPC Crimes_2021.xlsx")
```

Convert to numeric

```{r}
df <- SLL %>%
  select(-c("...1", "...2")) %>%
  mutate_if(is.character,as.numeric)
```

Group data to reduce cardinality

```{r}
temp_df <- df |> rowwise() |>
  summarise(women = `...7`,
            children = `...14`,
            st_sc = `...19`,
            state = `...23`,
            arms_related = `...31`,
            information_infringement = `...35`,
            trade_finance = `...42`,
            narcotics = `...48`,
            environment = `...56`,
            foreigner = `...61`,
            railway = `...64`,
            media = `...69`,
            food = `...73`,
            others = sum(`...91`, `Other SLL Crimes`))
```

Join into df

```{r}
df <- cbind(SLL$"...1", SLL$"...2", temp_df) %>%
       rename("State" = "SLL$...1",
              "District" = "SLL$...2")
```

## DATA Preprocessing

```{r}
IPC <- read_rds("data/rds/IPC.rds")
```

```{r}
SLL <- read_rds("data/rds/SLL.rds")
```

### Check for Missing Values

```{r}
IPC[rowSums(is.na(IPC))!=0,]
```

```{r}
SLL[rowSums(is.na(SLL))!=0,]
```

# Geospatial Data

Import the Data

```{r}
india <- st_read("data/geospatial/output.shp")
```

```{r}
tm_shape(district)+
  tm_polygons("statename")
```

```{r}
aspatial_districts <-  unique(IPC$District)
geospatial_districts <- unique(india$distname)

distance_df <- data.frame(matrix(nrow = 0, ncol = 3))
colnames(distance_df) = c("aspatial", "similarity", "closest geospatial")

new_aspatial <- list()
threshold <- 0.149 # more similar means smaller value

for (value in aspatial_districts) {
  
  distances <- stringdist(value, geospatial_districts, method = "jw") #distance matrix
  closest_match_index <- which.min(distances) #index
  
  #similar enough
  if (distances[closest_match_index] <= threshold) {
    
    closest_match <- geospatial_districts[closest_match_index]
    new_aspatial <- c(new_aspatial, closest_match)
    
  } 
  #not similar enough 
  else {
    new_aspatial <- c(new_aspatial, value)
  }
  
  #distance_df[nrow(distance_df) + 1, ] = c(value, distances[closest_match_index], closest_match)
  
}
```
